name: KnowX Frontend Deploy
on:
  push:
    branches:
      - I002-ConfigureDeployment

jobs:
  # test:
  #   name: "Frontend Tests"
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Install Node
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '20'
  #         working-directory: knowx

  #     - name: Install Dependencies
  #       run: npm install
  #       working-directory: knowx

  #     - name: Make envfile
  #       uses: SpicyPizza/create-envfile@v2.0
  #       with:
  #         envkey_API_ROOT_ROUTE: ${{ secrets.API_ROOT_ROUTE }}
  #         envkey_DB_URL: ${{ secrets.DB_URL }}
  #         envkey_NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
  #         envkey_NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
  #         envkey_GITHUB_ID: ${{ secrets.NEXTAUTH_GITHUB_ID }}
  #         envkey_GITHUB_SECRET: ${{ secrets.NEXTAUTH_GITHUB_SECRET }}
  #         envkey_GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
  #         envkey_GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
  #         directory: knowx

  #     - name: Run Tests
  #       uses: cypress-io/github-action@v6
  #       with:
  #         build: npm run build
  #         start: npm start
  #         working-directory: knowx

  #     - name: Send Deploy Failure Message
  #       if: failure()
  #       run: curl -s -X POST "${{ secrets.DISCORD_WEBHOOK }}" -d "content=ðŸ’¥ Front Testing Failed"

  #     - name: Send Deploy Success Message
  #       if: success()
  #       run: |
  #         curl -s -X POST "${{ secrets.DISCORD_WEBHOOK }}" -d "content=ðŸ§ª Front Testing Successful"

  deploy:
    # needs: test
    name: "Deploy to AWS"
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cofigure AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 900
          aws-region: us-east-1

      - name: Install node
        uses: actions/setup-node@v4
        with:
          node-version: '20.10.0'
          working-directory: knowx
        
      - name: Install SST
        run: |
          ls
          wget https://github.com/sst/ion/releases/download/v0.0.288/sst-linux-amd64.deb
          sudo dpkg -i sst-linux-amd64.deb
          sst version

      - name: Copy Secrets
        run: |
          sst secret set APIRootRoute $API_ROOT_ROUTE
          sst secret set DBUrl $DB_URL
          sst secret set NextAuthUrl $NEXTAUTH_URL
          sst secret set NextAuthSecret $NEXTAUTH_SECRET
          sst secret set GithubId $GITHUB_ID
          sst secret set GithubSecret $GITHUB_SECRET
          sst secret set GoogleClientId $GOOGLE_CLIENT_ID
          sst secret set GoogleClientSecret $GOOGLE_CLIENT_SECRET
        working-directory: knowx
        env:
          API_ROOT_ROUTE: ${{ secrets.API_ROOT_ROUTE }}
          DB_URL: ${{ secrets.DB_URL }}
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          GITHUB_ID: ${{ secrets.NEXTAUTH_GITHUB_ID }}
          GITHUB_SECRET: ${{ secrets.NEXTAUTH_GITHUB_SECRET }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}

      - name: npm Install
        run: npm ci
        working-directory: knowx

      - name: SST config
        run: |
          sudo sst unlock
          sudo sst install
        working-directory: knowx

      - name: Deploy
        id: deploy
        run: sudo sst deploy
        working-directory: knowx

      # - name: Extract URL from Deployment Output
      #   id: extract_url
      #   run: |
      #     output=$(cat ${{ steps.deploy.outputs.deployment_output_path }})
      #     urls=$(echo "$output" | grep -oE 'https?://[^ ]+')
      #     last_url=$(echo "$urls" | tail -n1)
      #     echo "url=$last_url" >> $GITHUB_OUTPUT
      #   working-directory: knowx

      - name: Send Deploy Failure Message
        if: failure()
        run: curl -s -X POST "${{ secrets.DISCORD_WEBHOOK }}" -d "content=ðŸš¨ Front Deploy Failed"

      - name: Send Deploy Success Message
        if: success()
        run: |
          curl -s -X POST "${{ secrets.DISCORD_WEBHOOK }}" -d "content=âœ… Front Deploy Successful"
      #     url=${{ steps.extract_url.outputs.url }}
      #     curl -s -X POST "${{ secrets.DISCORD_WEBHOOK }}" -d "content=ðŸš€ Deployment URL: $url"