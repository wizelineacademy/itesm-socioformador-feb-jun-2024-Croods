name: KnowX Frontend Deploy
on:
  push:
    branches:
      - I002-ConfigureDeployment

jobs:
  deploy:
    name: "Deploy to AWS"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cofigure AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        

      - name: Install SST
        run: |
          ls
          wget https://github.com/sst/ion/releases/download/v0.0.193/sst-linux-amd64.deb
          sudo dpkg -i sst-linux-amd64.deb
          sst version

      - name: Copy Secrets
        run: |
          sst secret set APIRootRoute $API_ROOT_ROUTE
          sst secret set DBUrl $DB_URL
          sst secret set NextAuthUrl $NEXTAUTH_URL
          sst secret set NextAuthSecret $NEXTAUTH_SECRET
          sst secret set GithubId $GITHUB_ID
          sst secret set GithubSecret $GITHUB_SECRET
          sst secret set GoogleClientId $GOOGLE_CLIENT_ID
          sst secret set GoogleClientSecret $GOOGLE_CLIENT_SECRET
        working-directory: knowx
        env:
          API_ROOT_ROUTE: ${{ secrets.API_ROOT_ROUTE }}
          DB_URL: ${{ secrets.DB_URL }}
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          GITHUB_ID: ${{ secrets.NEXTAUTH_GITHUB_ID }}
          GITHUB_SECRET: ${{ secrets.NEXTAUTH_GITHUB_SECRET }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}

      - name: Deploy
        run: sst deploy
        id: deploy
        working-directory: knowx

      - name: Send Deploy Failure Message
        if: failure()
        run: curl -s -X POST "${{ secrets.DISCORD_WEBHOOK }}" -d "content=ðŸš¨ Deploy Failed"

      - name: Send Deploy Success Message
        if: success()
        run: |
          curl -s -X POST "${{ secrets.DISCORD_WEBHOOK }}" -d "content=âœ… Deploy Passed"
          curl -s -X POST "${{ secrets.DISCORD_WEBHOOK }}" -d "content=$DEPLOY_MESSAGE"
        env:
          DEPLOY_MESSAGE: ${{ join(steps.deploy.outputs.*, '\n') }}